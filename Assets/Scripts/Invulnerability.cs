using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Invulnerability : MonoBehaviour
{

    public GameObject ballOne;
    public int ballOneScore;
    public GameObject ballTwo;
    public int ballTwoScore;
    public GameObject ballThree;
    public int ballThreeScore;
    public int allScore;
    public int ballUltCharges;
    public GameObject invulnCircle;
    public GameObject mainCharacter;
    // Start is called before the first frame update
    void Start()
    {
        ballOne = GameObject.Find("Circle1");
        ballTwo = GameObject.Find("OrbitCircle");
        ballThree = GameObject.Find("OrbitCircle (1)");
        invulnCircle = GameObject.Find("InvulnerabilityCircle");
        invulnCircle.SetActive(false);
        invulnCircle.GetComponent<DestroyObject>().enabled = false;
        invulnCircle.GetComponent<SpriteRenderer>().material.color = new Color(1.0f, 1.0f, 1.0f, 0.0f);
        mainCharacter = GameObject.Find("Character");

    }

    // Update is called once per frame
    void Update()
    {
        ballOneScore = ballOne.GetComponent<DestroyObject>().ballsHit;
        ballTwoScore = ballTwo.GetComponent<DestroyObject>().ballsHit;
        ballThreeScore = ballThree.GetComponent<DestroyObject>().ballsHit;

        allScore = ballOneScore + ballTwoScore + ballThreeScore;

        if (allScore >= 1) {
            allScore -= 1;
            ballUltCharges += 1;
        }

        if ((Input.GetKeyDown(KeyCode.Space))) {
            ballUltCharges = 0;
            mainCharacter.GetComponent<DieOnImpact>().enabled = false;
            //invulnCircle.GetComponent<DieOnImpact>().enabled = false;
            invulnCircle.GetComponent<DestroyObject>().enabled = true;
            invulnCircle.GetComponent<SpriteRenderer>().material.color = new Color(1.0f, 1.0f, 1.0f, 1.0f);
            invulnCircle.SetActive(true);
            mainCharacter.SetActive(false);
            Invoke("resetInvulnCircle", 5.0f);
        }
        
    }

    public void resetInvulnCircle() {
        mainCharacter.GetComponent<DieOnImpact>().enabled = true;
        invulnCircle.GetComponent<DestroyObject>().enabled = false;
        //invulnCircle.GetComponent<DieOnImpact>().enabled = true;
        invulnCircle.SetActive(false);
        mainCharacter.SetActive(true);
        invulnCircle.GetComponent<SpriteRenderer>().material.color = new Color(1.0f, 1.0f, 1.0f, 0.0f);

    }
}
